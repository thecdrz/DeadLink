name: Create GitHub Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release (e.g., v2.12.3). If empty, uses the current ref.'
        required: false

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine tag (push)
        if: github.event_name == 'push'
        run: echo "TAG=${GITHUB_REF_NAME}" >> $GITHUB_ENV

      - name: Determine tag (manual)
        if: github.event_name == 'workflow_dispatch'
        run: |
          if [ -n "${{ github.event.inputs.tag }}" ]; then
            echo "TAG=${{ github.event.inputs.tag }}" >> $GITHUB_ENV
          else
            echo "TAG=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          fi

      - name: Checkout tag (manual input)
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.tag != ''
        run: git checkout "refs/tags/${{ github.event.inputs.tag }}"

      - name: Resolve release notes
        id: notes
        shell: bash
        run: |
          FILE="RELEASE_NOTES_${TAG}.md"
          echo "Resolved file: $FILE"
          if [ -f "$FILE" ]; then
            echo "BODY_PATH=$FILE" >> $GITHUB_ENV
          else
            # Fallback minimal body
            echo "BODY=Release ${TAG}. See repository for details." >> $GITHUB_ENV
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          name: DeadLink ${{ env.TAG }}
          body_path: ${{ env.BODY_PATH }}
          body: ${{ env.BODY }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
name: Create GitHub Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release (e.g., v2.11.5)'
        required: true

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Resolve tag
        id: vars
        shell: bash
        run: |
          if [ -n "${{ github.event.inputs.tag }}" ]; then
            echo "TAG=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "TAG=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
          fi

      - name: Locate optional release body
        id: body
        shell: bash
        run: |
          TAG="${{ steps.vars.outputs.TAG }}"
          FILE=".github/release-body-${TAG}.md"
          if [ -f "$FILE" ]; then
            echo "BODY=$FILE" >> $GITHUB_OUTPUT
          elif [ -f "RELEASE_NOTES_${TAG}.md" ]; then
            echo "BODY=RELEASE_NOTES_${TAG}.md" >> $GITHUB_OUTPUT
          else
            echo "BODY=" >> $GITHUB_OUTPUT
          fi

      - name: Set flags
        id: flags
        shell: bash
        run: |
          if [ -n "${{ steps.body.outputs.BODY }}" ]; then
            echo "GEN=false" >> $GITHUB_OUTPUT
          else
            echo "GEN=true" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.vars.outputs.TAG }}
          name: DeadLink ${{ steps.vars.outputs.TAG }}
          body_path: ${{ steps.body.outputs.BODY }}
          generate_release_notes: ${{ steps.flags.outputs.GEN }}
          draft: false
          prerelease: false
          make_latest: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
