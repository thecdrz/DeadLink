name: Publish Docker image
permissions:
  contents: read
  packages: write

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to publish (e.g. v2.14.0)'
        required: false
        default: 'v2.14.0'

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        if: ${{ secrets.DOCKERHUBUSERNAME && secrets.DOCKERHUBTOKEN }}
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUBUSERNAME }}
          password: ${{ secrets.DOCKERHUBTOKEN }}

      - name: Build and push (GHCR + DockerHub)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/thecdrz/deadlink:${{ github.event.release.tag_name || inputs.tag }}
            ghcr.io/thecdrz/deadlink:latest
            docker.io/thecdrz/deadlink:${{ github.event.release.tag_name || inputs.tag }}
            docker.io/thecdrz/deadlink:latest

      - name: Create GitHub release comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const release = context.payload.release;
            if (!release) {
              core.info('No release payload present; skipping release comment.');
              return;
            }
            await github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: release.id,
              body: `Docker images for ${release.tag_name} pushed: ghcr.io/thecdrz/deadlink:${release.tag_name} and docker.io/thecdrz/deadlink:${release.tag_name}`
            });
